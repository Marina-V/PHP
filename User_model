<?php


class User extends CActiveRecord
{
	
    
     const ROLE_ADMIN = 'admin';
     const ROLE_USER = 'user';
     const ROLE_BANNED = 'banned';
     public $verifyCode; 
     
     
	public function tableName()
	{
		return '{{user}}';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
                        array('username, password, email', 'required'),
			array('email', 'email'), //подключаем самый простой валидатор
                     // если нужно запретить русские логины то роскоментировать array('username', 'match', 'pattern' => '/^([A-Za-z0-9]+)$/u', 'message' => 'Допустимые символы A-Za-z0-9'), 
                        array('created, ban, role', 'numerical', 'integerOnly'=>true),
			array('username, password, email', 'length', 'max'=>255), // поля проверки
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
                        array('verifyCode', 'captcha', 'allowEmpty'=>!CCaptcha::checkRequirements(), 'on' => 'registration'), 
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		
		return array(
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'username' => 'Логин',
			'password' => 'Пароль',
			'created' => 'Создано',
			'email' => 'Email',
			'ban' => 'Бан',
			'role' => 'Роль',
                        'verifyCode' => 'Код с картинки',
		);
	}

	
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id,true);
		$criteria->compare('username',$this->username,true);
		$criteria->compare('password',$this->password,true);
		$criteria->compare('created',$this->created);
		$criteria->compare('email',$this->email,true);
		$criteria->compare('ban',$this->ban);
		$criteria->compare('role',$this->role);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
                        'pagination'=>array("pageSize"=>15), // вывод по 15 строк
		));
	}
        
        

	
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
        
         public function beforeSave()
        {
            if($this->isNewRecord)
            $this->created = time();
            $this->role = 1;
            $this->password = md5('][ss[1}}{fd432`[]'.$this->password);
            return parent::beforeSave();
        }
        
          public static function all()
        {
          // $models = self::model()->findAll();
          // $array = array();
          // foreach ($models as $one){
          //     $array[$one->id] = $one->username;
          //  }
          // return $array;
          //***Ниже более короткая версия***//
            return CHtml::listData(self::model()->findAll(), 'id', 'username');
        }
        
        
}
